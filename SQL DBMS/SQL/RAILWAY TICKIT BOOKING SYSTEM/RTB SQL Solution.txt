-- create table users(
-- 	user_id serial primary key,
-- 	username varchar(50),
-- 	userpassword varchar(50),
-- 	email varchar(100),
-- 	phone_number varchar(20)
-- );



-- create table trains(
-- 	train_id serial primary key,
-- 	train_name varchar(100),
-- 	train_source varchar(100),
-- 	destination varchar(100),
-- 	departure_time time,
-- 	arrival_time time,
-- 	total_seats int
-- );



-- create table bookings(
-- 	booking_id serial primary key,
-- 	user_id int,
-- 	train_id int,
-- 	booking_date date,
-- 	num_passengers int,
-- 	total_fare decimal(10,2),
-- 	foreign key (user_id) references users (user_id) ON DELETE CASECAD ON UPDATE CASECAD,
-- 	foreign key (train_id) references trains (train_id) ON DELETE CASECAD ON UPDATE CASECAD
-- );



-- create table passengers(
-- 	passenger_id serial primary key,
-- 	booking_id int,
-- 	passenger_name varchar(100),
-- 	age int,
-- 	gender varchar(10),
-- 	foreign key (booking_id) references bookings(booking_id) ON DELETE CASECAD ON UPDATE CASECAD
-- );



-- INSERT INTO Users (user_id, username, userpassword, email, phone_number)
-- VALUES
--     (1, 'user1', 'password1', 'user1@example.com', '1234567890'),
--     (2, 'user2', 'password2', 'user2@example.com', '2345678901'),
--     (3, 'user3', 'password3', 'user3@example.com', '3456789012'),
--     (4, 'user4', 'password4', 'user4@example.com', '4567890123'),
--     (5, 'user5', 'password5', 'user5@example.com', '5678901234'),
--     (6, 'user6', 'password6', 'user6@example.com', '6789012345'),
--     (7, 'user7', 'password7', 'user7@example.com', '7890123456'),
--     (8, 'user8', 'password8', 'user8@example.com', '8901234567'),
--     (9, 'user9', 'password9', 'user9@example.com', '9012345678'),
--     (10, 'user10', 'password10', 'user10@example.com', '0123456789');



-- INSERT INTO Trains (train_id, train_name, train_source, destination, departure_time, arrival_time, total_seats)
-- VALUES
--     (1, 'Express1', 'CityA', 'CityB', '08:00:00', '12:00:00', 200),
--     (2, 'Express2', 'CityB', 'CityC', '10:00:00', '14:00:00', 250),
--     (3, 'Express3', 'CityC', 'CityD', '12:00:00', '16:00:00', 180),
--     (4, 'Express4', 'CityD', 'CityE', '14:00:00', '18:00:00', 220),
--     (5, 'Express5', 'CityE', 'CityF', '16:00:00', '20:00:00', 300),
--     (6, 'Express6', 'CityF', 'CityG', '18:00:00', '22:00:00', 280),
--     (7, 'Express7', 'CityG', 'CityH', '20:00:00', '00:00:00', 320),
--     (8, 'Express8', 'CityH', 'CityI', '22:00:00', '02:00:00', 270),
--     (9, 'Express9', 'CityI', 'CityJ', '00:00:00', '04:00:00', 240),
--     (10, 'Express10', 'CityJ', 'CityK', '02:00:00', '06:00:00', 280);



-- INSERT INTO Bookings (booking_id, user_id, train_id, booking_date, num_passengers, total_fare)
-- VALUES
--     (1, 1, 1, '2024-02-09', 2, 50.00),
--     (2, 2, 2, '2024-02-09', 1, 30.00),
--     (3, 3, 3, '2024-02-09', 3, 75.00),
--     (4, 4, 4, '2024-02-09', 2, 50.00),
--     (5, 5, 5, '2024-02-09', 1, 30.00),
--     (6, 6, 6, '2024-02-09', 2, 50.00),
--     (7, 7, 7, '2024-02-09', 1, 30.00),
--     (8, 8, 8, '2024-02-09', 3, 75.00),
--     (9, 9, 9, '2024-02-09', 2, 50.00),
--     (10, 10, 10, '2024-02-09', 1, 30.00);




-- INSERT INTO Passengers (passenger_id, booking_id, passenger_name, age, gender)
-- VALUES
--     (1, 1, 'Passenger1', 25, 'Male'),
--     (2, 2, 'Passenger2', 30, 'Female'),
--     (3, 3, 'Passenger3', 45, 'Male'),
--     (4, 4, 'Passenger4', 22, 'Female'),
--     (5, 5, 'Passenger5', 28, 'Male'),
--     (6, 6, 'Passenger6', 35, 'Female'),
--     (7, 7, 'Passenger7', 40, 'Male'),
--     (8, 8, 'Passenger8', 27, 'Female'),
--     (9, 9, 'Passenger9', 33, 'Male'),
--     (10, 10, 'Passenger10', 29, 'Female');



-- select * from bookings
-- select * from passengers
-- select * from trains
-- select * from users



-- update users set email = 'newemail@example.com' where user_id = 3
-- update trains set departure_time = '11:00:00' where train_id = 2
-- update bookings set total_fare = 35.50 where booking_id = 5
-- update users set phone_number = '9876543210' where phone_number = '1234567890'
-- update trains set destination = 'CityX' where departure_time > '15:00:00'




-- select * from users where email like '%@example.com'
-- select * from trains where train_source = 'CityA'
-- select * from bookings where user_id in (select user_id from users where user_id = 2)
-- select * from passengers where age >= 25
-- select * from bookings where booking_date > '2024-02-08'



-- select * from users order by username 
-- select * from trains order by departure_time
-- select * from bookings order by booking_date DESC
-- select * from passengers order by age desc
-- select * from trains order by total_Seats desc




-- select * from users where email like '%@example.com' AND phone_number IS NOT NULL
-- select * from trains where train_source like 'CityA' or train_source like 'CityB'
-- select * from bookings where user_id in (select user_id from users where user_id = 3 or user_id = 4)
-- select * from passengers where age is not null
-- select * from trains where departure_time is null




-- select count(*) as total_user from users
-- select avg(total_seats) as avg_of_total_seats from trains
-- select max(total_fare) from bookings
-- select count(*) from bookings where booking_date = '2024-02-09'
-- select sum(age) from passengers



-- select * from users where username like 'user%'
-- select * from trains where destination like '%City%'
-- select * from bookings where booking_date = '2024-02-09' and booking_id = 5
-- select * from passengers where passenger_name like '%Passenger%'
-- select * from trains where train_name like '%Express%'



-- select * from users where user_id in (1,3,5)
-- select * from trains where train_source in ('CityC','CityD','CityE')
-- select * from bookings where user_id in (2, 4, 6)
-- select * from passengers where age in (20, 25, 30)
-- select * from trains where train_id in (2, 4, 6)



-- select * from users where user_id between 3 and 7
-- select * from trains where departure_time between '10:00:00' and '16:00:00'
-- select * from bookings where booking_date between '2024-02-08' and '2024-02-10'
-- select * from passengers where age between 20 and 40
-- select * from trains where total_seats between 200 and 300



-- select * from users where email like '%example.com' union select * from users where phone_number like '987%' 
-- select * from trains where train_source like 'CityA' union select * from trains where destination like 'CityB'
-- select * from bookings where booking_date = '2024-02-09' union select * from bookings where booking_date = '2024-02-08'
-- select * from passengers where age < 25  union select * from passengers where age > 40
-- select * from trains where total_Seats < 250 union select * from trains where total_seats > 300



-- select user_id,count(*) as number_of_booking from bookings group by user_id
-- select train_id,avg(total_fare) from bookings group by train_id
-- select booking_id, max(age) from passengers group by booking_id
-- select booking_date, count(*) from bookings group by booking_date
-- select train_source,sum(total_seats) as total_seats from trains group by train_source



-- select * from users where user_id in (select distinct user_id from bookings )
-- select avg(age) from passengers where booking_id in (Select distinct booking_id from bookings)
-- select * from bookings where user_id in (select user_id from bookings group by user_id)



-- delete from users where user_id = 6
-- delete from bookings where user_id in (select user_id from users where user_id = 7)
-- delete from trains where total_Seats < 200
-- delete from bookings where booking_date = '2024-02-08'
-- delete from passengers where age < 18




-- alter table users add column address varchar(200)
-- alter table users drop column phone_number
-- alter table trains modify column departure_time datetime
-- alter table bookings add constarint user_id foreign key (users_id) references users(user_id)
-- alter table passengers rename to passengerDetails




-- select * from bookings
-- select * from passengers
-- select * from trains
-- select * from users